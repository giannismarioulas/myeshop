@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *                      Flexo by NopAdvance team                          *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@model SearchBoxModel
@using Nop.Core.Domain.Media

@inject MediaSettings mediaSettings
@if (Model.ShowSearchBox)
{
    <form asp-route="ProductSearch" method="get" class="small-search-box-form" id="small-search-box-form">
       <input type="text" class="search-box-text" id="small-searchterms" autocomplete="off" name="q" placeholder="@T("Search.SearchBox.Tooltip")" aria-label="@T("Search.SearchBox.Text.Label")" />
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.SearchBoxBeforeSearchButton, additionalData = Model })
        <button type="submit" class="button-1 search-box-button">@T("Search.Button")</button>
        @if (Model.SearchTermMinimumLength > 0)
        {
            <script asp-location="Footer">
                $("#small-search-box-form").on("submit", function(event) {
                    if ($("#small-searchterms").val() == "") {
                        alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Search.EnterSearchTerms").Text))');
                        $("#small-searchterms").focus();
                        event.preventDefault();
                    }
                });
            </script>
        }

        @if (Model.AutoCompleteEnabled)
        {
            <script asp-location="Footer">
                $(function() {
                    var showLinkToResultSearch;
                    var searchText;
                    $('#small-searchterms').autocomplete({
                            delay: 500,
                            minLength: @(Model.SearchTermMinimumLength.ToString()),
                            source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                            appendTo: '.search-box',
                            select: function(event, ui) {
                                $("#small-searchterms").val(ui.item.label);
                                setLocation(ui.item.producturl);
                                return false;
                        },
                        //append link to the end of list
                        open: function(event, ui) {
                            //display link to search page
                            if (showLinkToResultSearch) {
                                searchText = document.getElementById("small-searchterms").value;
                                $(".ui-autocomplete").append("<li class=\"ui-menu-item\" role=\"presentation\"><a href=\"/search?q=" + searchText + "\">@T("Search.SearchBox.SearchPageLink")</a></li>");
                            }
                        }
                    })
                    .data("ui-autocomplete")._renderItem = function(ul, item) {
                        var t = item.label;
                        showLinkToResultSearch = item.showlinktoresultsearch;
                        //html encode
                        t = htmlEncode(t);
                        imageWidth = '@(mediaSettings.AutoCompleteSearchThumbPictureSize)';
                        return $("<li></li>")
                            .data("item.autocomplete", item)
                                .append("<a>@(Model.ShowProductImagesInSearchAutoComplete ? Html.Raw("<img src='\" + item.productpictureurl + \"' width='\" + imageWidth + \"'>") : null)<span>" + t + "</span></a>")
                            .appendTo(ul);
                    };
                });
            </script>
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.SearchBox, additionalData = Model })
    </form>
}
else
{
    <script asp-location="Footer">
        $(document).ready(function () {
            $('.search-box.store-search-box', '.header-upper').css('display', 'none');
        });
    </script>
}
