@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *                      Flexo by NopAdvance team                          *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@model LanguageSelectorModel

@inject Nop.Core.IWebHelper webHelper

@if (Model.AvailableLanguages.Count > 1)
{
    <div class="language-selector">
       
    @{
        var returnUrl = webHelper.GetRawUrl(Context.Request);

            if (Model.UseImages)
            {
                <div class="language-flag"></div>
                 <ul class="language-list">
                @foreach (var lang in Model.AvailableLanguages)
                {
                    <li>
                        <a href="@Url.RouteUrl("ChangeLanguage", new { langid = lang.Id, returnUrl }, webHelper.GetCurrentRequestProtocol())" title="@lang.Name">
                                <img width="16" height="11" alt="@lang.Name" title='@lang.Name' @(lang.Id == Model.CurrentLanguageId ? " class=selected" : null)
                                 src="@Url.Content("~/images/flags/" + @lang.FlagImageFileName) "/>
                        </a>
                    </li>
                }
            </ul>
        }
        else
        {
            var languages = await Model.AvailableLanguages.SelectAwait(async lang => new SelectListItem
            {
                Text = lang.Name,
                Value = Url.RouteUrl("ChangeLanguage", new { langid = lang.Id, returnUrl }, webHelper.GetCurrentRequestProtocol()),
                Selected = lang.Id.Equals(Model.CurrentLanguageId)
            }).ToListAsync();

            <select id="customerlanguage" name="customerlanguage" asp-items="@languages" onchange="setLocation(this.value);" aria-label="@T("Languages.Selector.Label")"></select>
        }
    }
    </div>
}
<script asp-location="Footer">
    $(document).ready(function () {
        getSelectedLanguageFlag();

        var onClickShowLanguageimgList = function () {
            $(".language-list").addClass("active");
        };
        $(".language-flag").unbind("click").click(onClickShowLanguageimgList);

        $(".master-wrapper-page").unbind("click").click(function (evt) {
            if (evt.target.className == "language-flag" || evt.target.className == "images") {
                return;
            } else if ($(".language-list").is(".active")) {
                $(".language-list").removeClass("active");
            }
        });

    });
    var getSelectedLanguageFlag = function () {
        if ($("img.selected", ".language-selector")) {
            var src = $(".selected").attr("src");
            $(".language-flag").html("<img class='images' src='" + src + "'>");
        }
    };
</script>
