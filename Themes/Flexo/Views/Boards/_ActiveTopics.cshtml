@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *                      Flexo by NopAdvance team                          *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@using Nop.Services.Localization
@using Nop.Web.Factories
@model ActiveDiscussionsModel
@inject ILocalizationService localizationService
<div class="forums-table-section topic-group active-discussions">
    <div class="forums-table-section-title">
        @if (Model.ActiveDiscussionsFeedEnabled)
        {
            <a href="@Url.RouteUrl("ActiveDiscussionsRSS")" class="link-rss" title="@T("Forum.ActiveDiscussionsRSSLinkTitle")">@T("Forum.RSS")</a>
        }
        <strong>@T("Forum.ActiveDiscussions")</strong>
    </div>
    @{
        var pager = await Html.PagerAsync(new PagerModel(localizationService)
        {
            PageSize = Model.TopicPageSize,
            TotalRecords = Model.TopicTotalRecords,
            PageIndex = Model.TopicPageIndex,
            ShowTotalSummary = false,
            RouteActionName = "ActiveDiscussionsPaged",
            UseRouteLinks = true,
            RouteValues = new ForumModelFactory.ForumActiveDiscussionsRouteValues()
        });
    }
    @if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
    {
        <div class="pager upper">
            @pager
        </div>
    }
    <div class="forums-table-section-body">
        @if (Model.ForumTopics.Count > 0)
        {
            <div class="table-wrapper">
                <table class="forum-table">
                    <colgroup>
                        <col />
                        <col class="colWidth1" />
                        <col class="colWidth1" />
                        @if (Model.AllowPostVoting)
                        {
                            <col class="colWidth1" />
                        }
                        <col class="colWidth1" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th class="topic-details">
                                @T("Forum.TopicTitle")
                            </th>
                            <th class="replies">
                                @T("Forum.Replies")
                            </th>
                            <th class="views">
                                @T("Forum.Views")
                            </th>
                            @if (Model.AllowPostVoting)
                            {
                                <th class="votes">
                                    @T("Forum.Votes")
                                </th>
                            }
                            <th class="latest-post">
                                @T("Forum.LatestPost")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var topic in Model.ForumTopics)
                        {
                            <tr>
                                <td class="topic-details">
                                    <div class="topic-title">
                                        @Html.RouteLink(topic.Subject, "TopicSlug", new { id = topic.Id, slug = topic.SeName })
                                    </div>
                                    @if (topic.NumPosts > Model.PostsPageSize)
                                    {
                                        <div class="topic-pager">
                                            @await Html.ForumTopicSmallPagerAsync(topic)
                                        </div>
                                    }
                                    <div class="topic-starter">
                                        @if (topic.CustomerId > 0)
                                        {
                                            <label>@T("Forum.Author"):</label>
                                            if (topic.AllowViewingProfiles)
                                            {
                                                @Html.RouteLink(topic.CustomerName, "CustomerProfile", new { Id = topic.CustomerId })
                                            }
                                            else
                                            {
                                                @topic.CustomerName
                                            }
                                        }
                                    </div>
                                </td>
                                <td class="replies">
                                    @topic.NumReplies
                                </td>
                                <td class="views">
                                    @topic.Views
                                </td>
                                @if (Model.AllowPostVoting)
                                {
                                    <td class="votes">
                                        @topic.Votes
                                    </td>
                                }
                                <td class="latest-post">
                                    @await Component.InvokeAsync(typeof(ForumLastPostViewComponent), new { forumPostId = topic.LastPostId, showTopic = false })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    @if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
    {
        <div class="pager lower">
            @pager
        </div>
    }
    @if (Model.ViewAllLinkEnabled)
    {
        <div class="view-all">
            @Html.RouteLink(T("Forum.ActiveDiscussions.ViewAll").Text, "ActiveDiscussions", null)
        </div>
    }
</div>
