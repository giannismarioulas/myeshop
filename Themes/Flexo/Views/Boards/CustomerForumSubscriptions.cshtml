@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *                      Flexo by NopAdvance team                          *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@model CustomerForumSubscriptionsModel
@{    
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.ForumSubscriptions").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-forum-subscriptions-page");
}
@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent),new { selectedTabId = CustomerNavigationEnum.ForumSubscriptions })
}
<div class="page account-page forum-subscriptions-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.ForumSubscriptions")</h1>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerForumSubscriptionsTop, additionalData = Model })
        @if (Model.ForumSubscriptions.Count > 0)
        {
            <div class="description">
                @T("Account.ForumSubscriptions.Description")
            </div>
            <script asp-location="Footer">
                $(function() {
                    $('#selectall').on('click', function () {
                        $('.subscription-list .rowcheckbox').prop('checked', $(this).is(':checked')).trigger('change');
                    });

                    $('.subscription-list .rowcheckbox').on('change', function (e) {
                        var numChkBoxes = $('.subscription-list .rowcheckbox').length;
                        var numChkBoxesChecked = $('.subscription-list .rowcheckbox:checked').length;
                        $('#selectall').prop('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    });
                });
            </script>
            <form asp-route="CustomerForumSubscriptions" method="post">
                <div class="subscription-list">
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col class="colWidth1" />
                                <col />
                            </colgroup>
                            <thead>
                            <tr>
                                <th class="select-boxes custom-checkbox">
                                    <input class="custom-control-input" type="checkbox" id="selectall" aria-label="checkbox" />
                                    <label class="custom-control-label" for="selectall"></label>
                                </th>
                                <th class="info">
                                    @T("Account.ForumSubscriptions.InfoColumn")
                                </th>
                            </tr>
                            </thead>
                            <tbody>
                            @for (var i = 0; i < Model.ForumSubscriptions.Count; i++)
                            {
                                var item = Model.ForumSubscriptions[i];
                                <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                        <td class="select-boxes custom-checkbox">
                                            <input aria-label="checkbox" type="checkbox" name="fs@(item.Id)" id="fs@(item.Id)" class="rowcheckbox custom-control-input" />
                                            <label class="custom-control-label" for="fs@(item.Id)"></label>
                                    </td>
                                    <td class="info">
                                        @if (item.TopicSubscription)
                                        {
                                            @Html.RouteLink(item.Title, "TopicSlug", new { Id = item.ForumTopicId, slug = item.Slug })
                                        }
                                        else
                                        {
                                            @Html.RouteLink(item.Title, "ForumSlug", new { Id = item.ForumId, slug = item.Slug })
                                        }
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    @{
                        var pager = await Html.PagerAsync(Model.PagerModel);
                    }
                    @if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                    {
                        <div class="pager">
                            @pager
                        </div>
                    }
                    <div class="buttons">
                        <button type="submit" class="button-1 delete-selected-fs-button">@T("Account.ForumSubscriptions.DeleteSelected")</button>
                    </div>
                </div>
            </form>
        }
        else
        {
            <div class="no-data">
                @T("Account.ForumSubscriptions.NoSubscriptions")
            </div>
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerForumSubscriptionsBottom, additionalData = Model })
    </div>
</div>
